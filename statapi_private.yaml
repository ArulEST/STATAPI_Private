---
openapi: 3.0.0
info:
  description: |
    This is a sample server STATAPI server.
  version: v1
  title: STATAPI-Private
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: API Support
    # email: apiteam@swagger.io
    url: http://statapi-test.azurewebsites.net/
  x-logo:
    # url: '../logo.png'
    url: 'https://arulest.github.io/STATAPI_Private/logo.png'
    altText: STAT logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: Orders
    description: |
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Orders module is designed to streamline the management of orders within the application. It provides a comprehensive set of endpoints and functionalities that allow users to create, retrieve, update, and delete orders. This module serves as the backbone for order processing, ensuring a seamless and efficient experience for the customers and administrators. 
      
      
      Key features of the Orders module include: 


        •	**Order Creation:** Users can submit new orders through dedicated endpoints, specifying essential details such as collection and delivery location, quantities and price and tracking information. 
      
      
        •	**Order Retrieval:** Retrieve detailed information about existing orders, including order tracking number, status, collection and delivery location, and customer details. 
      
      
        •	**Order Modification:** Update order information, such as quantities, signature flag through secure and straightforward endpoints. 
      
      
        •	**Order Deletion:** When necessary, users can cancel orders, and the module handles the necessary updates and notifications. 
      
      
        •	**Order Status Tracking:** Easily monitor the status of orders, from creation to shipment and delivery, enabling real-time order tracking for customers and staff. 
  - name: vNEXT
    description: |
      # Solution Approach
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The objective is to enhance the performance of our application by optimizing response times. 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; To facilitate the seamless integration of a high-volume client into our application, we use Cosmos database that significantly improved response times, reducing the processing time for order requests. 
      <h3><b>Concept</b></h3>
      
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; When the user hits the new endpoint, it interacts with Cosmos, creates a temporary record and returns the response to the user with a standard set of information. 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A distinct process is executed which retrieves the temporary records from Cosmos and generates an order in SQL DB. 
      
      <img src="https://arulest.github.io/STATAPI_Private/flowchart.png" />

      <h3><b>Validation with Header-bound API keys </b></h3>
      
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; With the header-bound API keys, the validation is performed. When a vNext order creation endpoint is triggered, the API Key Message Handler validates the API key from the request header against the key available in the Cosmos DB, which currently serves as the central repository for API key validation. 
      
      <h3><b>Workflow Procedure</b></h3>
     
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the validation fails due to the non-existence of the API key in the Cosmos DB, the process halts, triggering an exception with the message "API key is invalid". 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Once the request header key is validated, using STAT base API controller, the customer API key, feature flag and price set of the customer have to be fetched from the cosmos DB.
      
      <h3><b>JSON Validation</b></h3>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The next step is to verify the input JSON, by checking whether the order endpoint holds the serviceable zip code and valid price set.  
        
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Zipcode validation</b> - With the predefined conditions stored in the Cosmos DB, the zip code will be checked if it comes under the serviceable proximity region. 
        
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Price set validation</b> - If the customer has the valid price set, the order request will be stored in the Cosmos DB.  

      <h3><b>Results:</b></h3>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Success</b> - When the zip code and price set validation succeed, a success response is generated confirming the order creation. 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Failure</b> - However, if the validation fails due to zip code or price set, the order request is not stored, and the system generates the exceptions as a response. 
     
     
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Zip code error response</b> - Either this order's delivery zip code is not serviceable at all or it cannot be serviced from your local service area. Please contact STAT customer service if you believe this to be inaccurate. We apologize for the inconvenience.
     
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Price set error response</b> - Selected price set not available at this time. Use api/PriceSets to get current list of available customer price sets.
      
      <img src="https://arulest.github.io/STATAPI_Private/workflow.png" />
     
      <h3><b>Master data that exists in Cosmos:</b></h3>
        <ul>
          <li>API Key</li>
          <li>ZipCodes</li>
        </ul>

      # Code snippet  
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The order request header key is validated with the API key in cosmos DB  

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the key exists in Cosmos DB – isvalid status will be True 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the key doesn’t exist in Cosmos DB – validate the request header key with the ASP Net user table ID in SQL DB 

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the validation succeeds - isvalid status will be True 

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_1.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the validation fails, check if the Bearer token exists in the header and the parameter should be non-empty.  

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the bearer token doesn’t exist, check if the header has the parameters with key “type”, wise and schedular. If anyone is present, isvalid is true

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_2.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_3.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_4.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_5.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_6.png" />
      
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_7.png" />
      
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_8.png" />

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...

      <img src="https://arulest.github.io/STATAPI_Private/Codesnippet/vnext_order_9.png" />

  - name: CreateOrderInDto_model
    x-displayName: The Create Order Request Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/CreateOrderInDto" />    
  - name: CreateOrderOutDto_model
    x-displayName: The Create Order Response Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/CreateOrderOutDto" />    
  - name: Cosmos_CreateOrderOutDto_model
    x-displayName: The vNEXT Create Order Response Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Cosmos_CreateOrderOutDto" />  

x-tagGroups:
  - name: General
    tags:
      - Orders
      - vNEXT
  - name: Models
    tags:
      - CreateOrderInDto_model  
      - CreateOrderOutDto_model
      - Cosmos_CreateOrderOutDto_model

paths:
  /api/orders:
    post:
      tags:
        - Orders
      summary: Create order.
      operationId: Orders_CreateOrder
      description: |
        This API endpoint facilitates the creation of a customer's order by capturing essential information such as quantities, prices, and location details. 
      parameters:
        - in: body
          name: orderDto
          # description: Fill the CreateOrderInDto object (JSON format).
          required: true
          schema:
            $ref: '#/components/schemas/CreateOrderInDto'
      responses:
        "200":
          description: OK successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderOutDto'
        "400":
          description: BadRequest
      requestBody:
        name: customerDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderInDto'
        description: Order request body schema description.
        required: true 
      # security:
      #   - api_key: []     

  /api/ordercreation:
    post:
      tags:
        - vNEXT
      summary: Create order.
      operationId: Orders_ordercreation
      description: |
        This API endpoint facilitates the creation of a customer's order by capturing essential information such as quantities, prices, and location details. 
      parameters:
        - in: body
          name: orderDto
          required: true
          schema:
            $ref: '#/components/schemas/CreateOrderInDto'
      responses:
        "200":
          description: OK successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cosmos_CreateOrderOutDto'
        "400":
          description: BadRequest
      requestBody:
        name: customerDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderInDto'
        description: Order request body schema description.
        required: true 
components:
  schemas:
    Collectionlocation:
      type: object
      required:
        - AddressLine1
        - AddressLine2
        - City
        - CompanyName
        - ContactName
        - Country
        - Email
        - Phone
        - PostalCode
        - State
      properties:
        # Zone:
        #   type: string
        #   description: The name of the collection zone
        #   minLength: 0
        #   maxLength: 50
        # ID:
        #   type: string
        #   description: Unique id generated by the STAT system. This is used as identifier
        #   minLength: 0
        #   maxLength: 50
        ContactName:
          type: string
          description: Name of the contact person of collection location 
          minLength: 0
          maxLength: 50
        CompanyName:
          type: string
          description: Name of the company of the collection location 
          minLength: 0
          maxLength: 50
        AddressLine1:
          type: string
          description: Line 1 of the collection location 
          minLength: 0
          maxLength: 50
        AddressLine2:
          type: string
          description: Line 2 of the collection location 
          minLength: 0
          maxLength: 50
        City:
          type: string
          description: City of the collection location 
          minLength: 0
          maxLength: 50
        State:
          type: string
          description: State of the collection location  
          minLength: 0
          maxLength: 50
        PostalCode:
          type: string
          description: Postal code of the collection location 
          minLength: 0
          maxLength: 50
        Country:
          type: string
          description: Country of the delivery location 
          minLength: 0
          maxLength: 50
        Comments:
          type: string
          description: Free text field to input the additional information 
          minLength: 0
          maxLength: 512
        Email:
          type: string
          description: Email address of the contact person
          minLength: 0
          maxLength: 512
        Phone:
          type: string
          description: Phone number of the contact person in collection 
          minLength: 
          maxLength: 50
        Category:
          type: string
          description: Category
          minLength: 0
          maxLength: 256
        LatitudeLongitude:
          type: string
          description: Lat & Long coordinates to collect the package and collection the package 
          minLength: 0
          maxLength: 100
      example:
        # Zone: ""
        # ID: ""
        ContactName: "Johnsons-6"
        CompanyName: "Johnsons-6"
        AddressLine1: "2334 Cedar Crest Blvd"
        AddressLine2: ""
        City: "Dallas"
        State: "TX"
        PostalCode: "75203"
        Country: "United States"
        Comments: null
        Email: "pharma@yopmail.com"
        Phone: "3333344445"
        Category: null
        LatitudeLongitude: null
      xml:
        name: Collectionlocation
    Deliverylocation:
      type: object
      required:
        - AddressLine1
        - AddressLine2
        - City
        - CompanyName
        - ContactName
        - Country
        - Email
        - Phone
        - PostalCode
        - State
      properties:
        # Zone:
        #   type: string
        #   description: The name of the delivery zone
        #   minLength: 0
        #   maxLength: 50
        # ID:
        #   type: string
        #   description: Unique id generated by the STAT system. This is used as identifier
        #   minLength: 0
        #   maxLength: 50
        ContactName:
          type: string
          description: Name of the contact person of delivery location 
          minLength: 0
          maxLength: 50
        CompanyName:
          type: string
          description: Name of the company of the delivery location 
          minLength: 0
          maxLength: 50
        AddressLine1:
          type: string
          description: Line 1 of the delivery location 
          minLength: 0
          maxLength: 50
        AddressLine2:
          type: string
          description: Line 2 of the delivery location 
          minLength: 0
          maxLength: 50
        City:
          type: string
          description: City of the delivery location 
          minLength: 0
          maxLength: 50
        State:
          type: string
          description: State of the delivery location  
          minLength: 0
          maxLength: 50
        PostalCode:
          type: string
          description: Postal code of the delivery location 
          minLength: 0
          maxLength: 50
        Country:
          type: string
          description: Country of the delivery location 
          minLength: 0
          maxLength: 50
        Comments:
          type: string
          description: Free text field to input the additional information 
          minLength: 0
          maxLength: 512
        Email:
          type: string
          description: Email address of the contact person
          minLength: 0
          maxLength: 512
        Phone:
          type: string
          description: Phone number of the contact person in delivery 
          minLength: 0
          maxLength: 50
        Category:
          type: string
          description: Category
          minLength: 0
          maxLength: 256
        LatitudeLongitude:
          type: string
          description: Lat & Long coordinates to collect the package and deliver the package 
          minLength: 0
          maxLength: 100
      example:
        # Zone: ""
        # ID: ""
        ContactName: "Tom Holland-525"
        CompanyName: "Medicare-525"
        AddressLine1: "9050 Markville Dr"
        AddressLine2: ""
        City: "Dallas"
        State: "TX"
        PostalCode: "75243"
        Country: "United States"
        Comments: null
        Email: "uzumaki@yopmail.com"
        Phone: "+914444444446"
        Category: null
        LatitudeLongitude: null
      xml:
        name: Deliverylocation
    OnTimePriceModifier:
      type: object
      properties:
        ID:
          type: string
          description: Unique id generated by the STAT system. This is used as identifier
        Name:
          type: string
          description: The name of the ontime price
        CustomValue:
          type: number
          format: double
          description: The name of the custom value
        PercentCommissionable:
          type: number
          format: double
          description: The value of the commissionable percent
        Price:
          type: number
          format: double
          description: The value of the price
        Type:
          type: integer
          format: int32
          description: The value of the type
        Input:
          type: integer
          format: int32
          description: The value of the input
      example:
        ID: ""
        Name: ""
        CustomValue: 0
        PercentCommissionable: 0
        Price: 0
        Type: 0
        Input: 0
      xml:
        name: OnTimePriceModifier    
    CreateOrderInDto:
      type: object
      required:
        - CODAmount
        - Comments
        - CustomerId
        - DeclaredValue
        - Description
        - PriceSet
        - PurchaseOrderNumber
        - Quantity
        - SignatureType
        - Weight
      properties:
        BasePrice:
          type: number
          format: double
          description: Base price of the order 
        CODAmount:
          type: number
          format: double
          description: The amount to be collected during the time of delivery 
        SubTotal:
          type: number
          format: double
          description: SubTotal of the order excluding the tax amount
        TaxTotal:
          type: number
          format: double
          description: Total tax amount for the order 
        TotalCost:
          type: number
          format: double
          description: Total cost of the order 
        PriceModifierTotalCost:
          type: number
          format: double
          description: Price modifier for the total cost of the order 
        DeliveryCODRequired:
          type: boolean
          description: To determine if DeliveryCOD is necessary or not. The options are <yes/no>.  
        OrderId:
          type: integer
          format: int64
          description: The ID generated by the STAT system acts as a unique identifier for an order 
        UID:
          type: string
          description: The ID generated by the STAT system acts as a unique identifier for an order 
          minLength: 0
          maxLength: 50
        OrderIdLink:
          type: string
          description: The link or URL that provides access to order-specific information 
          minLength: 0
          maxLength: 2000
        CustomerId:
          type: integer
          format: int32
          description: The system-generated ID for customers, serving as a unique identifier. 
        Customer:
          type: string
          description: The customer for whom the order will be placed.  
          minLength: 0
          maxLength: 50
        BarcodeURL:
          type: string
          description: The BarcodeURL helps to check the status of the ordered product.  
          minLength: 0
          maxLength: 2000
        Refrigerated:
          type: boolean
          description: This tells whether the product is refrigerated before or during the shipment.  
            The possible values are “true/false”. True represents that the product is refrigerated and false demotes it is not refrigerated  
        ID:
          type: string
          description: The ID generated by the system serves as a unique identifier  
          minLength: 0
          maxLength: 50
        TrackingNumber:
          type: string
          description: The tracking number acts as a unique identifier to track the package in real time during the shipment.
          minLength: 0
          maxLength: 50
        RequestedBy:
          type: string
          description: The individual who requested the order  
          minLength: 0
          maxLength: 50
        BasePriceType:
          type: string
          description: This indicates the Basepricetype of the order
          minLength: 0
          maxLength: 50
        Description:
          type: string
          description: It is a free text field where the special instructions about the product, shipment can be added 
          minLength: 0
          maxLength: 2000
        Comments:
          type: string
          description: It’s a free text field to add comments  
          minLength: 0
          maxLength: 2000
        DateSubmitted:
          type: string
          format: date-time
          description: The date of order submission 
        RouteName:
          type: string
          description: The designated shipping route for the order
          minLength: 0
          maxLength: 50
        StatusLevel:
          type: integer
          format: int32
          description: This signifies the current order status level 
        CollectionArrivalDate:
          type: string
          format: date-time
          description: The scheduled date for the package to be collected from the specified collection location. 
        CollectionContactName:
          type: string
          description: Name of the peron from whom the package should be collected 
          minLength: 0
          maxLength: 50
        CollectionCODRequired:
          type: boolean
          description: This indicates whether collection COD is required 
            The potential values are "Yes/No," where "Yes" signifies that the COD is required, and "No" signifies that it is not required. 
        CollectionSignatureRequired:
          type: boolean
          description: This indicates whether obtaining a signature from the recipient is necessary after package collection. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        Distance:
          type: number
          format: double
          description: Distance estimated for the delivery  
        Height:
          type: number
          format: double
          description: Height of the package 
        Width:
          type: number
          format: double
          description: Width of the package 
        Length:
          type: number
          format: double
          description: Length of the package 
        Weight:
          type: number
          format: double
          description: Weight of the package  
        Quantity:
          type: integer
          format: int32
          description: Order quantity 
        PriceSet:
          type: string
          description: Priceset of the package 
          minLength: 0
          maxLength: 50
        DeclaredValue:
          type: number
          format: double
          description: The amount value declared for the order 
        DeliveryArrivalDate:
          type: string
          format: date-time
          description: The scheduled date for the package to be delivered at the specified location. 
        DeliveryEstimateEarliest:
          type: string
          format: date-time
          description: The previously estimated delivery date 
        DeliveryEstimateLatest:
          type: string
          format: date-time
          description: The newly estimated delivery date 
        DeliverySignatureRequired:
          type: boolean
          description: Indicates whether a signature is necessary from the recipient upon package delivery. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        SuppressUserNotification:
          type: boolean
          description: This allows to prevent or disable notifications intended for a user.  
            The potential values are "Yes/No," where "Yes" signifies that the notifications should not be sent, and "No" signifies that notification has to to be sent.  
        PurchaseOrderNumber:
          type: string
          description: PurchaseOrderNumber serves as a unique identifier to track the purchase order.  
          minLength: 0
          maxLength: 50
        ReferenceNumber:
          type: string
          description: ReferenceNumber acts as a unique identifier to track the package order. 
          minLength: 0
          maxLength: 50
        ShortCodeOptIn:
          type: boolean
          description: It signifies whether a shortcodeoptin is required or not. 
            The potential values are "Yes/No," where "Yes" signifies that the shortcodeoptin is required, and "No" signifies that it is not required. 
        CollectionLocation:
          $ref: '#/components/schemas/Collectionlocation'
        DeliveryLocation:
          $ref: '#/components/schemas/Deliverylocation'
        PriceModifier:
          type: array
          items:
            $ref: '#/components/schemas/OnTimePriceModifier'
        IsCustomerPortal:
          type: boolean
          description: It signifies whether the customerportal is required or not. 
            The potential values are "Yes/No," where "Yes" signifies that the customerportal is required, and "No" signifies that it is not required. 
        IsUpdateOnTime:
          type: boolean
          description: It signifies whether the update on time is required or not. 
            The potential values are "Yes/No," where "Yes" signifies that the update on time is required, and "No" signifies that it is not required. 
        ShipToInjectionPoint:
          type: boolean
          description: It signifies whether a shipment to the injection point is required or not. 
            The potential values are "Yes/No," where "Yes" signifies that the shipment is required, and "No" signifies that it is not required.  
        ShippinglabelSize:
          type: string
          description: Represents the size of the shipping label  
          minLength: 0
          maxLength: 50
        RXNumber:
          type: string
          description: RXNumber serves as a unique identifier for the package.
          minLength: 0
          maxLength: 250
        SignatureType:
          type: string
          description: This denotes whether the signature should be received from the desired contact.  
            The possible values are “Direct/Indirect” where “Direct” signifies that the signature needs to be received from the desired person and “Indirect” signifies that it is not needed to be collected from the desired person   
          minLength: 0
          maxLength: 50
        IsAdultSignature:
          type: boolean
          description: Denotes the signature is received from an adult.   
            The possible values are “Yes/No” where “Yes” signifies that the signature was received from an adult person and “No” signifies that it is not an adult signature  
        ParentOrderId:
          type: integer
          format: int64
          description: The parent ID generated by the system serves as a unique identifier for an order 
      example:
        BasePrice: 0
        CODAmount: 20
        SubTotal: 0
        TaxTotal: 0
        TotalCost: 0
        PriceModifierTotalCost: 0
        DeliveryCODRequired: false
        OrderId: 0
        UID: ""
        OrderIdLink: ""
        CustomerId: 1369
        Customer: ""
        BarcodeURL: ""
        Refrigerated: true
        ID: ""
        TrackingNumber: ""
        RequestedBy: null  
        BasePriceType: ""
        Description: "Fragile Handle with care: Glass material"
        Comments: null
        DateSubmitted: ""
        RouteName: ""
        StatusLevel: ""
        CollectionArrivalDate: ""
        CollectionContactName: null
        CollectionCODRequired: false
        CollectionSignatureRequired: false
        Distance: 0
        Height: 150
        Width: 200
        Length: 250
        Weight: 200
        Quantity: 1
        PriceSet: "b6ec8de4-852a-445f-8f3e-c56b8b3969b5"
        DeclaredValue: 129
        DeliveryArrivalDate: "2023-08-24T06:55:12.2847335Z"
        DeliveryEstimateEarliest: "2023-08-24T06:55:12.2847335Z"
        DeliveryEstimateLatest: "2023-08-24T06:55:12.2847335Z"
        DeliverySignatureRequired: true
        SuppressUserNotification: false
        PurchaseOrderNumber: "55555"
        ReferenceNumber: null
        ShortCodeOptIn: false
        CollectionLocation:
          # Zone: ""
          # ID: ""
          ContactName: "Johnsons-6"
          CompanyName: "Johnsons-6"
          AddressLine1: "2334 Cedar Crest Blvd"
          AddressLine2: ""
          City: "Dallas"
          State: "TX"
          PostalCode: "75203"
          Country: "United States"
          Comments: null
          Email: "pharma@yopmail.com"
          Phone: "3333344445"
          Category: null
          LatitudeLongitude: null
        DeliveryLocation:
          # Zone: ""
          # ID: ""
          ContactName: "Tom Holland-525"
          CompanyName: "Medicare-525"
          AddressLine1: "9050 Markville Dr"
          AddressLine2: ""
          City: "Dallas"
          State: "TX"
          PostalCode: "75243"
          Country: "United States"
          Comments: null
          Email: "uzumaki@yopmail.com"
          Phone: "+914444444446"
          Category: null
          LatitudeLongitude: null
        PriceModifier:
          ID: ""
          Name: ""
          CustomValue: 0
          PercentCommissionable: 0
          Price: 0
          Type: 0
          Input: 0
        IsCustomerPortal: true
        IsUpdateOnTime: true
        ShipToInjectionPoint: true
        ShippinglabelSize: ""
        RXNumber: ""
        SignatureType: "direct"
        IsAdultSignature: true
        ParentOrderId: 0
      xml:
        name: CreateOrderInDto  
   
    OrderStatusDto:
      type: object
      properties:
        Date:
          type: string
          format: date-time
          description: 
        Description:
          type: string
          description: 
        Exception:
          type: boolean
          description: 
        ExceptionCode:
          type: integer
          format: int32
          description: 
        LocalTime:
          type: string
          format: date-time
          description: 
        Region:
          type: string
          description: 
      example:
        Date: "2023-09-05T15:20:38.0755622Z"
        Description: "Order received"
        Exception: false
        ExceptionCode: 0
        LocalTime: "2023-09-05T10:20:38.0755622"
        Region: Irving  
      xml:
        name: OrderStatusDto     
    CollectionArrivalWindow:
      type: object
      properties:
        EarliestTime:
          type: string
          format: date-time
          description: The earliest estimated collection time 
        LatestTime:
          type: string
          format: date-time
          description: The recently estimated collection time 
      example:
        EarliestTime: "2023-09-05T15:20:31.539697Z"
        LatestTime: "2023-09-06T02:00:00Z"
      xml:
        name: CollectionArrivalWindow         
    DeliveryArrivalWindow:
      type: object
      properties:
        EarliestTime:
          type: string
          format: date-time
          description: The earliest estimated delivery time 
        LatestTime:
          type: string
          format: date-time
          description: The recently estimated delivery time  
      example:
        EarliestTime: "2023-09-06T12:00:00Z"
        LatestTime: "2023-09-06T16:00:00Z"
      xml:
        name: DeliveryArrivalWindow        
    CreateOrderOutDto:
      type: object
      properties:
        error:
          type: string
          description: An error had occurred while processing the request. Kindly contact STAT support to know further details   
          minLength: 0
          maxLength: 2000
        ID:
          type: string
          description: Unique id generated by the STAT system. This is used as identifier
          minLength: 0
          maxLength: 50
        TrackingNumber:
          type: string
          description: The tracking number acts as a unique identifier to track the package in real-time during the shipment. 
          minLength: 0
          maxLength: 50
        TrackingURL:
          type: string
          description: Helps to track and get the status of the movement of the package order. 
          minLength: 0
          maxLength: 2000
        BarcodeURL:
          type: string
          description: The BarcodeURL helps to check the status of the ordered product.  
          minLength: 0
          maxLength: 2000
        ShippingLabel:
          type: string
          description: The label affixed on the package gives comprehensive information regarding the shipment.
          minLength: 0
          maxLength: 2000
        VpodDownload:
          type: string
          description: 
          minLength: 0
          maxLength: 2000
        SignatureURL:
          type: string
          description: The system generates a URL to get the digital signature from the individual  
          minLength: 0
          maxLength: 2000 
        Refrigerated:
          type: boolean
          description: This tells whether the product is refrigerated before or during the shipment.  
            The possible values are “Yes/No”. True represents that the product is refrigerated and false demotes it is not refrigerated  
        StatusUpdates:
          $ref: '#/components/schemas/OrderStatusDto'
        DeliveryContactName:
          type: string
          description: Name of the individual to contact during the delivery 
          minLength: 0
          maxLength: 50
        StatusCode:
          type: integer
          format: int32
          description: Status code of the order package 
        CustomerAccount:
          type: string
          description: Account number of the customer
          minLength: 0
          maxLength: 50
        Description:
          type: string
          description: It is a free text field where the special instructions about the product, shipment can be added 
          minLength: 0
          maxLength: 2000
        Comments:
          type: string
          description: It’s a free text field to add comments  
          minLength: 0
          maxLength: 2000
        Customer:
          type: string
          description: Name of the customer 
          minLength: 0
          maxLength: 50  
        PriceSet:
          type: string
          description: Priceset of the package   
          minLength: 0
          maxLength: 50 
        CollectionArrivalWindow:
          $ref: '#/components/schemas/CollectionArrivalWindow'
        DeliveryArrivalWindow:
          $ref: '#/components/schemas/DeliveryArrivalWindow'
        CollectionSignatureRequired:
          type: boolean
          description: This indicates whether obtaining a signature from the recipient is necessary after package collection. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        DeliverySignatureRequired:
          type: boolean
          description: Indicates whether a signature is necessary from the recipient upon package delivery. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        SuppressUserNotification:
          type: boolean
          description: This allows to prevent or disable notifications intended for a user. 
            The potential values are "Yes/No," where "Yes" signifies that the notifications should not be sent, and "No" signifies that notification has to to be sent.  
        CollectionLocation:
          $ref: '#/components/schemas/Collectionlocation'
        DeliveryLocation:
          $ref: '#/components/schemas/Deliverylocation'
        TotalCost:
          type: number
          format: double
          description: Total cost of the order 
        DeclaredValue:
          type: number
          format: double
          description: The amount value declared for the order 
        DriverInstruction:
          type: string
          description: A text field that allows for the inclusion of instructions to provide to drivers.  
          minLength: 0
          maxLength: 200 
      example:
        RegionCode: null
        error: null
        ID: "12735950"
        TrackingNumber: "S2023090002912"
        TrackingURL: "https://apps.statovernight.com/MyOrder/?id=nIF2IBUM_ECFnw_-W7sqpA"
        BarcodeURL: "https://statqa.azurewebsites.net/OrdersManagement/Orders/OrderShippingLabel?orderId=S2023090002912&customerId=43532938-be8d-43c3-b9c7-cc6ea8441f93"
        ShippingLabel: "https://statapi-development.azurewebsites.net//api/DownloadLabel?TrackingNumber=S2023090002912&Type=ShippingLabel&CustomerId=43532938-be8d-43c3-b9c7-cc6ea8441f93&Size=4x8"
        VpodDownload: null
        SignatureURL: null
        Refrigerated: false
        StatusUpdates: 
          Date: "2023-09-05T15:20:38.0755622Z"
          Description: "Order received"
          Exception: false
          ExceptionCode: 0
          LocalTime: "2023-09-05T10:20:38.0755622"
          Region: Irving              
        DeliveryContactName: null
        StatusCode: 1
        CustomerAccount: "78554512"
        Description: "Fragile Handle with care: Glass material"
        Comments: ""
        Customer: "1369"
        PriceSet: ""
        CollectionArrivalWindow: 
          EarliestTime: "2023-09-05T15:20:31.539697Z"
          LatestTime: "2023-09-06T02:00:00Z"
        DeliveryArrivalWindow: 
          EarliestTime: "2023-09-06T12:00:00Z"
          LatestTime: "2023-09-06T16:00:00Z"
        CollectionSignatureRequired: false
        DeliverySignatureRequired: false
        SuppressUserNotification: false
        CollectionLocation: 
          # Zone: ""
          # ID: ""
          ContactName: "Johnsons"
          CompanyName: "PKR pharmacy"
          AddressLine1: "2334 Cedar Crest Blvd"
          AddressLine2: null
          City: "Dallas"
          State: "TX"
          PostalCode: "75203"
          Country: "United States"
          Comments: null
          Email: "pharma@yopmail.com"
          Phone: "3333344445"
          Category: null
          LatitudeLongitude: null
        DeliveryLocation: 
          # Zone: ""
          # ID: ""
          ContactName: "Tom Holland"
          CompanyName: "Medicare"
          AddressLine1: "9050 Markville Dr"
          AddressLine2: null
          City: "Dallas"
          State: "TX"
          PostalCode: "75243-1254"
          Country: "United States"
          Comments: null
          Email: "sample01@yopmail.com"
          Phone: ""
          Category: null
          LatitudeLongitude: null
        DeclaredValue: 129.0
        TotalCost: 0.0
        DriverInstruction: "Drop the package at the front door"
      xml:
        name: CreateOrderOutDto 

    Cosmos_CreateOrderOutDto:
      type: object
      properties:
        UID:
          type: string
          description: Unique id generated by the STAT system. This is used as identifier
          minLength: 0
          maxLength: 50
        TrackingNumber:
          type: string
          description: The tracking number acts as a unique identifier to track the package in real-time during the shipment. 
          minLength: 0
          maxLength: 50
        CollectionLocation:
          $ref: '#/components/schemas/Collectionlocation'
        DeliveryLocation:
          $ref: '#/components/schemas/Deliverylocation'  
        Refrigerated:
          type: boolean
          description: This tells whether the product is refrigerated before or during the shipment.  
            The possible values are “Yes/No”. True represents that the product is refrigerated and false demotes it is not refrigerated    
        StatusCode:
          type: integer
          format: int32
          description: Status code of the order package 
        Description:
          type: string
          description: It is a free text field where the special instructions about the product, shipment can be added 
          minLength: 0
          maxLength: 2000
        Comments:
          type: string
          description: It’s a free text field to add comments  
          minLength: 0
          maxLength: 2000  
        CollectionSignatureRequired:
          type: boolean
          description: This indicates whether obtaining a signature from the recipient is necessary after package collection. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        DeliverySignatureRequired:
          type: boolean
          description: Indicates whether a signature is necessary from the recipient upon package delivery. 
            The potential values are "Yes/No," where "Yes" signifies that the signature is required, and "No" signifies that it is not required. 
        SuppressUserNotification:
          type: boolean
          description: This allows to prevent or disable notifications intended for a user. 
            The potential values are "Yes/No," where "Yes" signifies that the notifications should not be sent, and "No" signifies that notification has to to be sent.   
      example:
        UID: "ef018f60-34b0-44f7-aa20-a2a479a24bc2"
        TrackingNumber: "78788055"
        collectionLocation: 
          ContactName: "Johnsons-6"
          CompanyName: "Johnsons-6"
          AddressLine1: "2334 Cedar Crest Blvd"
          AddressLine2: ""
          City: "Dallas"
          State: "TX"
          PostalCode: "75203"
          Country: "United States"
          Comments: null,
          Email: "pharma@yopmail.com"
          Phone: 3333344445
        deliveryLocation: 
          ContactName: "Tom Holland-525"
          CompanyName: "Medicare-525"
          AddressLine1: "9050 Markville Dr"
          AddressLine2: ""
          City: "Dallas"
          State: "TX"
          PostalCode: "75243-1254"
          Country: "United States"
          Comments: null,
          Email: "uzumaki@yopmail.com"
          Phone: "+914444444446"
        Refrigerated: false
        StatusCode: 0
        Description: "Fragile Handle with care: Glass material"
        Comments: "Fragile Handle with care: Glass material"
        CollectionSignatureRequired: false
        DeliverySignatureRequired: false
        SuppressUserNotification: false
      xml:
        name: Cosmos_CreateOrderOutDto             
  securitySchemes:
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: APIKey
      in: header    
   
